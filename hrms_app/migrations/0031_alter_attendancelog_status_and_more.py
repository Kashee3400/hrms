# Generated by Django 4.2.16 on 2025-09-24 06:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('hrms_app', '0030_leaveapplication_is_leave_deducted'),
    ]

    operations = [
        migrations.AlterField(
            model_name='attendancelog',
            name='status',
            field=models.CharField(blank=True, choices=[('pending', 'Pending'), ('approved', 'Approve'), ('rejected', 'Reject'), ('recommended', 'Recommend'), ('not recommended', 'Not Recommend')], help_text='Current status of the attendance log.', max_length=20, null=True, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='leaveapplication',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approve'), ('rejected', 'Reject'), ('cancelled', 'Cancel'), ('pending_cancellation', 'Pending Cancellation'), ('recommended', 'Recommend'), ('not recommended', 'Not Recommend')], default='pending', help_text='Current status of the leave application.', max_length=30, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='leavestatuspermission',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approve'), ('rejected', 'Reject'), ('cancelled', 'Cancel'), ('pending_cancellation', 'Pending Cancellation'), ('recommended', 'Recommend'), ('not recommended', 'Not Recommend')], max_length=30, verbose_name='Leave Status'),
        ),
        migrations.AlterField(
            model_name='tourstatuslog',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approve'), ('rejected', 'Reject'), ('completed', 'Complete'), ('cancelled', 'Cancel'), ('extended', 'Extended'), ('pending_cancellation', 'Pending Cancellation')], default='pending', max_length=50, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='usertour',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approve'), ('rejected', 'Reject'), ('completed', 'Complete'), ('cancelled', 'Cancel'), ('extended', 'Extended'), ('pending_cancellation', 'Pending Cancellation')], default='pending', help_text='Current status of the tour.', max_length=50, verbose_name='Status'),
        ),
        migrations.CreateModel(
            name='AttendanceCacheLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_type', models.CharField(choices=[('daily', 'Daily Processing'), ('monthly', 'Monthly Recalculation'), ('manual', 'Manual Trigger'), ('correction', 'Data Correction'), ('bulk_import', 'Bulk Import'), ('system_sync', 'System Synchronization')], db_index=True, help_text='Type of cache processing operation', max_length=20, verbose_name='Process Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='pending', help_text='Current status of the processing operation', max_length=20, verbose_name='Processing Status')),
                ('start_date', models.DateField(help_text='Beginning date of the processing period', verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='End date of the processing period', verbose_name='End Date')),
                ('employees_processed', models.PositiveIntegerField(default=0, help_text='Total number of employees processed in this operation', verbose_name='Employees Processed')),
                ('records_created', models.PositiveIntegerField(default=0, help_text='Number of new cache records created', verbose_name='Records Created')),
                ('records_updated', models.PositiveIntegerField(default=0, help_text='Number of existing cache records updated', verbose_name='Records Updated')),
                ('processing_time_seconds', models.FloatField(blank=True, help_text='Total time taken for processing in seconds', null=True, verbose_name='Processing Time (seconds)')),
                ('error_message', models.TextField(blank=True, help_text='Detailed error message if processing failed', verbose_name='Error Message')),
                ('error_count', models.PositiveIntegerField(default=0, help_text='Number of errors encountered during processing', verbose_name='Error Count')),
                ('triggered_by', models.CharField(blank=True, help_text='User or system that initiated this process', max_length=100, verbose_name='Triggered By')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or context about this processing run', verbose_name='Processing Notes')),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='When this processing operation began', verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When this processing operation finished', null=True, verbose_name='Completed At')),
            ],
            options={
                'verbose_name': 'Attendance Cache Log',
                'verbose_name_plural': 'Attendance Cache Logs',
                'db_table': 'attendance_cache_log',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['status', 'started_at'], name='idx_cache_log_status_started'), models.Index(fields=['process_type', 'status'], name='idx_cache_log_type_status'), models.Index(fields=['start_date', 'end_date'], name='idx_cache_log_date_range'), models.Index(fields=['processing_time_seconds'], name='idx_cache_log_processing_time'), models.Index(fields=['started_at'], name='idx_cache_log_started')],
            },
        ),
        migrations.CreateModel(
            name='AttendanceCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='The date for this attendance record', verbose_name='Date')),
                ('status', models.CharField(db_index=True, help_text='Current attendance status (present, absent, late, etc.)', max_length=10, verbose_name='Attendance Status')),
                ('color_hex', models.CharField(default='#000000', help_text='Hex color code for UI display of this status', max_length=7, validators=[django.core.validators.RegexValidator(message='Enter a valid hex color code (e.g., #FF0000 or #F00)', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='Status Color')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Extra data stored as JSON for future extensions', verbose_name='Additional Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this cache record was first created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this cache record was last modified', verbose_name='Updated At')),
                ('employee', models.ForeignKey(help_text='The employee this attendance record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='attendance_cache', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Attendance Cache',
                'verbose_name_plural': 'Attendance Caches',
                'db_table': 'attendance_cache',
                'ordering': ['-date', 'employee__username'],
                'indexes': [models.Index(fields=['employee', 'date'], name='idx_attendance_emp_date'), models.Index(fields=['date'], name='idx_attendance_date'), models.Index(fields=['status'], name='idx_attendance_status'), models.Index(fields=['created_at'], name='idx_attendance_created'), models.Index(fields=['status', 'date'], name='idx_attendance_status_date')],
            },
        ),
        migrations.AddConstraint(
            model_name='attendancecache',
            constraint=models.UniqueConstraint(fields=('employee', 'date'), name='unique_employee_date_attendance'),
        ),
    ]
