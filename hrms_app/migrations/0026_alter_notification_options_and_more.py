# Generated by Django 4.2.16 on 2024-10-04 10:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('hrms_app', '0025_customuser_device_location'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notification',
            options={'managed': True, 'verbose_name': 'Notification', 'verbose_name_plural': 'Notifications'},
        ),
        migrations.AddField(
            model_name='notification',
            name='go_route_mobile',
            field=models.CharField(blank=True, help_text='The mobile deep link for navigating to the related content.', max_length=255, null=True, verbose_name='Mobile Deep Link'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(blank=True, choices=[('leave_status', 'Leave Status'), ('tour_status', 'Tour Status'), ('comp_off_status', 'Compensatory Off Status'), ('chat', 'Chat'), ('attendance_reg', 'Attendance Regularization')], help_text='The type of notification being sent.', max_length=50, null=True, verbose_name='Notification Type'),
        ),
        migrations.AddField(
            model_name='notification',
            name='receiver',
            field=models.ForeignKey(blank=True, help_text='The user who receives the notification.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Receiver'),
        ),
        migrations.AddField(
            model_name='notification',
            name='related_content_type',
            field=models.ForeignKey(blank=True, help_text='The type of the related object (model) this notification is linked to.', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Related Content Type'),
        ),
        migrations.AddField(
            model_name='notification',
            name='related_object_id',
            field=models.PositiveIntegerField(blank=True, help_text='The ID of the related object associated with this notification.', null=True, verbose_name='Related Object ID'),
        ),
        migrations.AddField(
            model_name='notification',
            name='target_url',
            field=models.URLField(blank=True, help_text='The URL for web navigation related to this notification.', max_length=500, null=True, verbose_name='Target URL'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(default=False, help_text='Indicates whether the notification has been read.', verbose_name='Read Status'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='message',
            field=models.CharField(help_text='The content of the notification.', max_length=255, verbose_name='Notification Message'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(help_text='The user who sent the notification.', on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to=settings.AUTH_USER_MODEL, verbose_name='Sender'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='timestamp',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='The time when the notification was created.', verbose_name='Timestamp'),
        ),
        migrations.AlterModelTable(
            name='notification',
            table='tbl_notification',
        ),
        migrations.CreateModel(
            name='CompensatoryOff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Unique ID')),
                ('worked_on', models.DateField(help_text='The date on which the employee worked to earn the compensatory off.', verbose_name='Worked On')),
                ('expiry_date', models.DateField(help_text='The date on which the compensatory off expires.', verbose_name='Expiry Date')),
                ('reason', models.TextField(blank=True, help_text='Reason for working on the day and earning compensatory off.', null=True, verbose_name='Reason')),
                ('status', models.CharField(choices=[('open', 'Open'), ('claimed', 'Claimed'), ('expired', 'Expired'), ('rejected', 'Rejected')], default='open', help_text='The current status of the compensatory off.', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The employee who earned this compensatory off.', on_delete=django.db.models.deletion.CASCADE, related_name='compensatory_offs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
