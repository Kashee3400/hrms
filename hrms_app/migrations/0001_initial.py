# Generated by Django 5.0 on 2024-07-30 15:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_day_hours', models.PositiveIntegerField(default=8, verbose_name='Full Day Hours')),
                ('half_day_hours', models.PositiveIntegerField(default=4, verbose_name='Half Day Hours')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Attendance Setting',
                'verbose_name_plural': 'Attendance Settings',
                'db_table': 'tbl_attendance_setting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AttendanceStatusColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Half Day', 'Half Day'), ('Present', 'Present'), ('Absent', 'Absent')], max_length=50, verbose_name='Status')),
                ('color', models.CharField(max_length=20, verbose_name='Color')),
                ('color_hex', models.CharField(blank=True, max_length=7, null=True, verbose_name='Color Hex Code')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Attendance Status Color',
                'verbose_name_plural': 'Attendance Status Colors',
                'db_table': 'tbl_attendance_status_color',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CorrespondingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address Line 2')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Country')),
                ('district', models.CharField(blank=True, max_length=50, null=True, verbose_name='District')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='State')),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='ZIP Code')),
            ],
            options={
                'verbose_name': 'Corresponding Address',
                'verbose_name_plural': 'Corresponding Addresses',
                'db_table': 'tbl_correspondence_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.CharField(max_length=100, verbose_name='Logo')),
                ('logo_image', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo Image')),
            ],
            options={
                'verbose_name': 'Logo',
                'verbose_name_plural': 'Logos',
                'db_table': 'tbl_logo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marital_status', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created AT')),
            ],
            options={
                'verbose_name': 'Marital Status',
                'verbose_name_plural': 'Marital Statuses',
                'db_table': 'tbl_marital_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParmanentAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(max_length=100, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address Line 2')),
                ('country', models.CharField(max_length=50, verbose_name='Country')),
                ('district', models.CharField(max_length=50, verbose_name='District')),
                ('state', models.CharField(max_length=50, verbose_name='State')),
                ('zipcode', models.CharField(max_length=10, verbose_name='ZIP Code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created AT')),
            ],
            options={
                'verbose_name': 'Parmanent Address',
                'verbose_name_plural': 'Parmanent Addresses',
                'db_table': 'tbl_permanent_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('religion', models.CharField(max_length=100, unique=True, verbose_name='Religion')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created AT')),
            ],
            options={
                'verbose_name': 'Religion',
                'verbose_name_plural': 'Religions',
                'db_table': 'tbl_religion',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ShiftTiming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('grace_time', models.IntegerField(blank=True, null=True, verbose_name='Grace Time')),
                ('grace_start_time', models.TimeField(blank=True, null=True, verbose_name='Grace Start Time')),
                ('grace_end_time', models.TimeField(blank=True, null=True, verbose_name='Grace End Time')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created AT')),
            ],
            options={
                'verbose_name': 'Shift Timing',
                'verbose_name_plural': 'Shift Timings',
                'db_table': 'tbl_shift_timing',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('official_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Official E-mail')),
                ('is_rm', models.BooleanField(default=False, verbose_name='Is Manager')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to=settings.AUTH_USER_MODEL, verbose_name='Reports To')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'tbl_user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('from_date', models.DateTimeField(blank=True, null=True, verbose_name='From Date')),
                ('to_date', models.DateTimeField(blank=True, null=True, verbose_name='To Date')),
                ('reg_duration', models.CharField(blank=True, max_length=100, null=True, verbose_name='Regularization Duration')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('is_regularisation', models.BooleanField(default=False, verbose_name='Is Regularisation')),
                ('duration', models.TimeField(blank=True, null=True, verbose_name='Duration')),
                ('reg_status', models.CharField(blank=True, choices=[('Early Going', 'Early Going'), ('Late Coming', 'Late Coming'), ('Mis Punching', 'Mis Punching')], max_length=20, null=True, verbose_name='Regularization Status')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], max_length=20, null=True, verbose_name='Status')),
                ('att_status', models.CharField(choices=[('Half Day', 'Half Day'), ('Present', 'Present'), ('Absent', 'Absent')], max_length=20, verbose_name='Attendance Status')),
                ('color_hex', models.CharField(blank=True, max_length=7, null=True, verbose_name='Color Hex Code')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applied_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_log', to=settings.AUTH_USER_MODEL, verbose_name='Applied By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Attendance Log',
                'verbose_name_plural': 'Attendance Logs',
                'db_table': 'tbl_events',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AttendanceLogAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_by_name', models.CharField(max_length=255, verbose_name='Action By Name')),
                ('action_by_email', models.EmailField(max_length=254, verbose_name='Action By Email')),
                ('action', models.CharField(max_length=100, verbose_name='Action')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('action_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Action By')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='hrms_app.attendancelog', verbose_name='Attendance Log')),
            ],
            options={
                'verbose_name': 'Attendance Log Action',
                'verbose_name_plural': 'Attendance Log Actions',
                'db_table': 'tbl_attendance_log_actions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('branch_name', models.CharField(max_length=100)),
                ('IFSC_code', models.CharField(max_length=20)),
                ('pan_number', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bank Detail',
                'verbose_name_plural': 'Bank Details',
                'db_table': 'tbl_bank_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('reason', models.CharField(max_length=100, verbose_name='Reason')),
                ('date', models.DateField(verbose_name='Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deduction',
                'verbose_name_plural': 'Deductions',
                'db_table': 'tbl_deduction',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100, verbose_name='Department')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'tbl_department',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('designation', models.CharField(max_length=100, verbose_name='Designation')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designation_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrms_app.department', verbose_name='Department')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designation_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Designation',
                'verbose_name_plural': 'Designations',
                'db_table': 'tbl_designation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(max_length=100, verbose_name='Member Name')),
                ('relationship', models.CharField(choices=[('Spouse', 'Spouse'), ('Child', 'Child'), ('Parent', 'Parent'), ('Sibling', 'Sibling'), ('Other', 'Other')], max_length=20, verbose_name='Relationship')),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='families', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Family Detail',
                'verbose_name_plural': 'Family Details',
                'db_table': 'tbl_family_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gender_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gender_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Gender',
                'verbose_name_plural': 'Genders',
                'db_table': 'tbl_gender',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('short_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Short Code')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('color_hex', models.CharField(blank=True, max_length=7, null=True, verbose_name='Color Hex Code')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_holidays', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_holidays', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Holiday',
                'verbose_name_plural': 'Holidays',
                'db_table': 'tbl_holidays',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicationNo', models.CharField(max_length=20, unique=True, verbose_name='Application No')),
                ('applyingDate', models.DateTimeField(auto_now=True, verbose_name='Applying Date')),
                ('startDate', models.DateTimeField(verbose_name='Start Date')),
                ('endDate', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('usedLeave', models.FloatField(verbose_name='Used Leave')),
                ('balanceLeave', models.FloatField(verbose_name='Balance Leave')),
                ('reason', models.TextField(blank=True, verbose_name='Reason')),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Pending', 'Pending'), ('Cancelled', 'Cancelled')], default='Pending', max_length=30, verbose_name='Status')),
                ('startDayChoice', models.CharField(choices=[('Full Day', 'Full Day'), ('First Half', 'First Half'), ('Second Half', 'Second Half')], default='Full Day', max_length=20, verbose_name='Start Day Choice')),
                ('endDayChoice', models.CharField(choices=[('Full Day', 'Full Day'), ('First Half', 'First Half')], default='Full Day', max_length=20, verbose_name='End Day Choice')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('appliedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to=settings.AUTH_USER_MODEL, verbose_name='Applied By')),
            ],
            options={
                'verbose_name': 'Leave Application',
                'verbose_name_plural': 'Leave Applications',
                'db_table': 'tbl_leave_application',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LeaveLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_by_name', models.CharField(max_length=255, verbose_name='Action By Name')),
                ('action_by_email', models.EmailField(max_length=254, verbose_name='Action By Email')),
                ('action', models.CharField(max_length=100, verbose_name='Action')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('action_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Action By')),
                ('leave_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='hrms_app.leaveapplication', verbose_name='Leave Application')),
            ],
            options={
                'verbose_name': 'Leave Log',
                'verbose_name_plural': 'Leave Logs',
                'db_table': 'tbl_leave_log',
                'ordering': ['-timestamp'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('Unpaid Leave (LWP)', 'Unpaid Leave (LWP)'), ('Casual Leave (CL)', 'Casual Leave (CL)'), ('Sick Leave (SL)', 'Sick Leave (SL)'), ('Earned Leave (EL)', 'Earned Leave (EL)'), ('Maternity Leave (ML)', 'Maternity Leave (ML)'), ('Comp OFF', 'Comp OFF (CO)')], max_length=100, unique=True, verbose_name='Leave Type')),
                ('leave_type_short_code', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Leave Type Short Code')),
                ('min_notice_days', models.FloatField(blank=True, null=True, verbose_name='Minimum Notice Days')),
                ('max_days_limit', models.FloatField(blank=True, null=True, verbose_name='Maximum Days Limit')),
                ('min_days_limit', models.FloatField(blank=True, null=True, verbose_name='Minimum Days Limit')),
                ('allowed_days_per_year', models.FloatField(blank=True, null=True, verbose_name='Allowed Days Per Year')),
                ('leave_fy_start', models.DateField(blank=True, null=True, verbose_name='Leave FY Start')),
                ('leave_fy_end', models.DateField(blank=True, null=True, verbose_name='Leave FY End')),
                ('color_hex', models.CharField(blank=True, max_length=7, null=True, verbose_name='Color Hex Code')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leave_types', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_leave_types', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Leave Type',
                'verbose_name_plural': 'Leave Types',
                'db_table': 'tbl_leave_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chat Notification',
                'verbose_name_plural': 'Chat Notifications',
                'db_table': 'tbl_chat_notification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotificationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_notifications', models.BooleanField(default=True)),
                ('receive_sound_notifications', models.BooleanField(default=True)),
                ('receive_desktop_notifications', models.BooleanField(default=True)),
                ('receive_mobile_notifications', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chat Notification Setting',
                'verbose_name_plural': 'Chat Notifications Settings',
                'db_table': 'tbl_chat_notification_settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_code', models.CharField(max_length=100, unique=True, verbose_name='Employee Code')),
                ('avatar', models.FileField(blank=True, null=True, upload_to='avatar/', verbose_name='Avatar')),
                ('mobile_number', models.CharField(max_length=15, unique=True, verbose_name='Mobile Number')),
                ('alt_mobile_number', models.CharField(blank=True, max_length=15, verbose_name='Alternative Mobile Number')),
                ('official_mobile_number', models.CharField(max_length=15, unique=True, verbose_name='Official Mobile Number')),
                ('birthday', models.DateField(verbose_name='Birthday')),
                ('ctc', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='CTC')),
                ('ann_date', models.DateField(blank=True, null=True, verbose_name='Anniversary Date')),
                ('doj', models.DateField(verbose_name='Date of Joining')),
                ('dol', models.DateField(blank=True, null=True, verbose_name='Date of Leaving')),
                ('correspondence_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_app.correspondingaddress', verbose_name='Correspondence Address')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrms_app.designation', verbose_name='Designation')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_app.gender', verbose_name='Gender')),
                ('marital_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_app.maritalstatus', verbose_name='Marital Status')),
                ('permanent_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_app.parmanentaddress', verbose_name='Permanent Address')),
                ('user', models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='personal_detail', to=settings.AUTH_USER_MODEL)),
                ('religion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_app.religion', verbose_name='Religion')),
            ],
            options={
                'verbose_name': 'Personal Detail',
                'verbose_name_plural': 'Personal Details',
                'db_table': 'tbl_personal_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SalaryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ta', models.DecimalField(decimal_places=2, max_digits=10)),
                ('da', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('hra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('conveyance_allowance', models.DecimalField(decimal_places=2, default=1600, max_digits=10)),
                ('medical_allowance', models.DecimalField(decimal_places=2, default=1250, max_digits=10)),
                ('lta', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('esi_employer_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('esi_employee_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pf_employer_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pf_employee_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('professional_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('labor_welfare_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('special_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hrms_app.personaldetails')),
            ],
            options={
                'verbose_name': 'Salary Detail',
                'verbose_name_plural': 'Salary Details',
                'db_table': 'tbl_sal_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shift_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('shift_timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrms_app.shifttiming', verbose_name='Shift Timing')),
            ],
            options={
                'db_table': 'tbl_employee_shift',
            },
        ),
        migrations.CreateModel(
            name='UserTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_destination', models.CharField(max_length=255, verbose_name='From Destination')),
                ('to_destination', models.CharField(max_length=255, verbose_name='To Destination')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('Extended', 'Extended')], default='Pending', max_length=50, verbose_name='Status')),
                ('extended_end_date', models.DateField(blank=True, null=True, verbose_name='Extended End Date')),
                ('bills_submitted', models.BooleanField(default=False, verbose_name='Bills Submitted')),
                ('applied_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Applied By')),
            ],
            options={
                'verbose_name': 'User Tour',
                'verbose_name_plural': "Users' Tours",
                'db_table': 'tbl_user_tours',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TourStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('Extended', 'Extended')], default='Pending', max_length=50, verbose_name='Status')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='hrms_app.usertour', verbose_name='Tour')),
            ],
            options={
                'verbose_name': 'Tour Status Log',
                'verbose_name_plural': 'Tour Status Logs',
                'db_table': 'tbl_tour_status_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Bill Amount')),
                ('bill_date', models.DateField(verbose_name='Bill Date')),
                ('bill_details', models.TextField(verbose_name='Bill Details')),
                ('bill_document', models.FileField(upload_to='bills/', verbose_name='Bill Document')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tour_bills', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tour_bills', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrms_app.usertour', verbose_name='Tour')),
            ],
            options={
                'verbose_name': 'Tour Bill',
                'verbose_name_plural': 'Tour Bills',
                'db_table': 'tbl_tour_bill',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LeaveBalanceOpenings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_leaves', models.FloatField(blank=True, null=True, verbose_name='Number of Leaves')),
                ('remaining_leave_balances', models.FloatField(blank=True, null=True, verbose_name='Remaining Leave Balance')),
                ('year', models.PositiveIntegerField(default=2024, verbose_name='Year')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leave_balances', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_leave_balances', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('leave_type', models.ForeignKey(choices=[('Unpaid Leave (LWP)', 'Unpaid Leave (LWP)'), ('Casual Leave (CL)', 'Casual Leave (CL)'), ('Sick Leave (SL)', 'Sick Leave (SL)'), ('Earned Leave (EL)', 'Earned Leave (EL)'), ('Maternity Leave (ML)', 'Maternity Leave (ML)'), ('Comp OFF', 'Comp OFF (CO)')], null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_app.leavetype', verbose_name='Leave Type')),
            ],
            options={
                'verbose_name': 'Leave Balance',
                'verbose_name_plural': 'Leave Balances',
                'db_table': 'tbl_leave_bal',
                'managed': True,
                'unique_together': {('leave_type', 'user', 'year')},
            },
        ),
    ]
